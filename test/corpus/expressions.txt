================================================================================
Int Literals
================================================================================

fun litty() {
    0
    0b0
    0x0
    0o0

    1
    0b1
    0x1
    0o1

    42069
    0b1111_1111
    0xDEAD_BEEF
    0o777777
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    (identifier)
    (parameter_list)
    (block
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal))
      (expression_statement
        (int_literal)))))

================================================================================
Quick Maths
================================================================================

fun maths() {
    1 + 2
    1 - 2
    1 * 2
    4 / 2
    50 / 2 * 2 + 10 - 5
    5 + 5 + 5 + 5 - 10
    2 * 2 * 2 * 2 * 2
    5 * 2 + 10
    5 + 2 * 10
    5 * (2 + 10);
    -5;
    -10;
    -50 + 100 + -50;
    (5 + 10 * 2 + 15 / 3) * 2 + -10
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    (identifier)
    (parameter_list)
    (block
      (expression_statement
        (binary_expression
          (int_literal)
          (int_literal)))
      (expression_statement
        (binary_expression
          (int_literal)
          (int_literal)))
      (expression_statement
        (binary_expression
          (int_literal)
          (int_literal)))
      (expression_statement
        (binary_expression
          (int_literal)
          (int_literal)))
      (expression_statement
        (binary_expression
          (binary_expression
            (binary_expression
              (binary_expression
                (int_literal)
                (int_literal))
              (int_literal))
            (int_literal))
          (int_literal)))
      (expression_statement
        (binary_expression
          (binary_expression
            (binary_expression
              (binary_expression
                (int_literal)
                (int_literal))
              (int_literal))
            (int_literal))
          (int_literal)))
      (expression_statement
        (binary_expression
          (binary_expression
            (binary_expression
              (binary_expression
                (int_literal)
                (int_literal))
              (int_literal))
            (int_literal))
          (int_literal)))
      (expression_statement
        (binary_expression
          (binary_expression
            (int_literal)
            (int_literal))
          (int_literal)))
      (expression_statement
        (binary_expression
          (int_literal)
          (binary_expression
            (int_literal)
            (int_literal))))
      (expression_statement
        (binary_expression
          (int_literal)
          (parenthesized_expression
            (binary_expression
              (int_literal)
              (int_literal)))))
      (expression_statement
        (unary_expression
          (int_literal)))
      (expression_statement
        (unary_expression
          (int_literal)))
      (expression_statement
        (binary_expression
          (binary_expression
            (unary_expression
              (int_literal))
            (int_literal))
          (unary_expression
            (int_literal))))
      (expression_statement
        (binary_expression
          (binary_expression
            (parenthesized_expression
              (binary_expression
                (binary_expression
                  (int_literal)
                  (binary_expression
                    (int_literal)
                    (int_literal)))
                (binary_expression
                  (int_literal)
                  (int_literal))))
            (int_literal))
          (unary_expression
            (int_literal)))))))

================================================================================
Pointer Stuff
================================================================================

fun maths() {
    *p;
    **p;
    &p;
    0[p]
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    (identifier)
    (parameter_list)
    (block
      (expression_statement
        (unary_expression
          (identifier)))
      (expression_statement
        (unary_expression
          (unary_expression
            (identifier))))
      (expression_statement
        (unary_expression
          (identifier)))
      (expression_statement
        (index_expression
          (int_literal)
          (identifier))))))

================================================================================
Call Expression
================================================================================

fun main() {
    foo()
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    (identifier)
    (parameter_list)
    (block
      (expression_statement
        (call_expression
          (identifier)
          (argument_list))))))
